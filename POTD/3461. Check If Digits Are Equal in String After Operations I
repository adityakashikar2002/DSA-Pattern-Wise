// Brute Approach
// Time: O(nÂ²)
// Space: O(n)
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
class Solution {
    public boolean hasSameDigits(String s) {
        int n = s.length();

        while(n > 2)
        {
            StringBuilder str = new StringBuilder("");

            for(int i = 1; i < n; i++)
            {
                int curr = s.charAt(i) - '0';
                int prev = s.charAt(i - 1) - '0';

                int res = (prev + curr) % 10;
                str.append(Integer.toString(res));
            }

            s = str.toString();
            n = s.length();
        }
        

        return  s.charAt(0) == s.charAt(1);
    }
}
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------

// Optimal Approach
// Time: O()
// Space: O()
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
