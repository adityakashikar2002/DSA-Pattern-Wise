üí° Time Complexity (Brute Force):
Let‚Äôs say:

q = number of operations

n √ó m = matrix size

Worst case: every operation affects entire matrix.

Time = O(q √ó n √ó m) ‚Üí TLE for q or n√óm ‚âà 10‚Åµ

------------------------------------------------------------------

class Solution {
    public ArrayList<ArrayList<Integer>> applyDiff2D(int[][] mat, int[][] opr) {
        int mat_r = mat.length;
        int mat_c = mat[0].length;

        for (int i = 0; i < opr.length; i++) {
            int val = opr[i][0];
            int sr = opr[i][1];
            int sc = opr[i][2];
            int er = opr[i][3];
            int ec = opr[i][4];

            for (int r = sr; r <= er; r++) {
                for (int c = sc; c <= ec; c++) {
                    mat[r][c] += val;
                }
            }
        }

        ArrayList<ArrayList<Integer>> result = new ArrayList<>();

        for (int i = 0; i < mat_r; i++) {
            ArrayList<Integer> row = new ArrayList<>();
            for (int j = 0; j < mat_c; j++) {
                row.add(mat[i][j]);
            }
            result.add(row);
        }

        return result;
    }
}

----------------------------------------------------------------------------

