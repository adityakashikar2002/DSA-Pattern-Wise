// Time: O(n logn)
// Space: O(logn)
----------------------------------------------------------------------------------------
class Solution {
    public int[] getNoZeroIntegers(int n) {
        int[] ans = new int[2];
        
        for(int i = 1; i < n; i++)
        {
            int j = n - i;

            if(!String.valueOf(i).contains("0") && !String.valueOf(j).contains("0"))
            {
                ans[0] = i;
                ans[1] = j;
                break;
            }  
        }

        return ans;
    }
}

----------------------------------------------------------------------------------------
// Time: O(logn)
// Space: O(1)
----------------------------------------------------------------------------------------
class Solution {
    public int[] getNoZeroIntegers(int n) {
        int a = n;
        int b = 0;

        int placeValue = 1;

        while(n > 1)
        {
            int take = 1;   // agar last digit 1 nhi hai to ghata skhte

            if(n % 10 == 1)  // agar 1 hai to 2 se ghatao
                take = 2;
            
            a = a - take * placeValue; 
            b = b + take * placeValue;

            n = (n - take) / 10; // n ko update kro 

            placeValue *= 10; // one's ten's hundered's ................
        }

        return new int[] {a,b};
    }
}
