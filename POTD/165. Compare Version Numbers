// Brute Force
// Time: O(max(n1,n2))
// Space: O(n1 + n2)
--------------------------------------------------------------------------------------------------------
/*
    sabse asan tarika hoga ki string ko array me split kro, har ek number barobar split ho jaega
    bss phir compare hi krna hai
*/
class Solution {
    public int compareVersion(String version1, String version2) {
        String[] l1 = version1.split("\\.");
        String[] l2 = version2.split("\\.");

        int n = Math.max(l1.length, l2.length);

        for (int i = 0; i < n; i++) {
            int a = (i < l1.length) ? Integer.parseInt(l1[i]) : 0;
            int b = (i < l2.length) ? Integer.parseInt(l2[i]) : 0;

            if (a < b)
                return -1;
            if (a > b)
                return 1;
        }

        return 0;
    }
}

--------------------------------------------------------------------------------------------------------
// Optimal Solution
// Time: O(max(n1,n2))
// Space: O(1)
--------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------
/*
    dursa tarika hoga ki bina split kiya string ko character by character compare kro
    '.' aya to skip maro bss vohi process
*/
class Solution {
    public int compareVersion(String version1, String version2) {
        int v1 = version1.length();
        int v2 = version2.length();

        int i = 0;
        int j = 0;

        while(i < v1 || j < v2) // koi ek string khatam bhi ho gai to bhi niche a and b se koi n koi 0 jarror rahega
        {
            int a = 0; 
            int b = 0;

            while(i < v1 && version1.charAt(i) != '.')
            {
                a = a * 10 + (version1.charAt(i) - '0'); // yee sare characters ko jodke dega // like 1.123.6 so 123 ko brobar..
                i++;
            }

            while(j < v2 && version2.charAt(j) != '.')
            {
                b = b * 10 + (version2.charAt(j) - '0');
                j++;
            }
            
            if(a < b)
                return -1;
            
            if(a > b)
                return 1;
            
            i++;
            j++;
        }

        return 0;
    }
}
