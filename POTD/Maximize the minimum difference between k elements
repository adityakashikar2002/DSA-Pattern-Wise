// Time:- O(nlogn) _> O(n log n + n log(maxGap)) ≈ O(n log n)
// Space:- O(1)
-------------------------------------------------------------------
class Solution {
    public int maxMinDiff(int[] arr, int k) {
        Arrays.sort(arr);
        int n = arr.length;
        
        int low = 0;
        int high = arr[n - 1] - arr[0];
        int ans = 0;
        
        while(low <= high) {
            int mid = low + (high - low) / 2;
            
            if(canPlace(arr, k, mid)) {
                ans = mid;  // possible → try bigger
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return ans;
    }
    
    public boolean canPlace(int[] arr, int k, int mid) {
        int count = 1;  // first element always placed
        int lastPlaced = arr[0];
        
        for(int i = 1; i < arr.length; i++) {
            if(arr[i] - lastPlaced >= mid) {
                count++;
                lastPlaced = arr[i];
                if(count >= k) return true;
            }
        }
        
        return false;
    }
}
