// Time:  O(q × 32) → O(q)
// Space: O(q) for result array + O(32) for powers list → O(q)
-------------------------------------------------------------------
class Solution {
    public int[] productQueries(int n, int[][] queries) {
        ArrayList<Integer> powers = new ArrayList<>();

        int MOD = (int) 1e9 + 7;

        int[] res = new int[queries.length];

        for(int i = 0; i < 32; i++)
        {
            if((n & (1 << i)) != 0)
            {
                powers.add((int) Math.pow(2, i));
            }
        }

        for(int i = 0; i < queries.length; i++)
        {
            int left = queries[i][0];
            int right = queries[i][1];

            long prod = 1;

            for(int j = left; j <= right; j++)
            {
                prod = (prod * powers.get(j)) % MOD;
            }

            res[i] = (int) prod;
        }

        return res;
    }
}
