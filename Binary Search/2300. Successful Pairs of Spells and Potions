// Brute Force
// Time: O(nÂ²)
// Space: O(n)
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
class Solution {
    public int[] successfulPairs(int[] spells, int[] potions, long success) {
        int n = spells.length;

        int p = potions.length;

        int[] ans = new int[n];
        Arrays.fill(ans , 0);

        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < p; j++)
            {
                if((long) spells[i] * potions[j] >= success)
                {
                    ans[i]++;
                }
            }
        }

        return ans;
    }
}

--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O()
// Space: O()

--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
