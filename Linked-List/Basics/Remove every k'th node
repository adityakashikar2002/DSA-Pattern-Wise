// Two Pointers, Sentinel Node, prev , curr, modulo  Time- O(N) & Space - O(1)

/* Link list Node
class Node
{
    Node next;
    int data;
    Node(int d)
    {
        data = d;
        next = null;
    }
}*/
class Solution {
    /*You are required to complete this method*/
    Node deleteK(Node head, int k) {
        // Your code here
        
        Node sentinel = new Node(0);
        
        sentinel.next = head;
        
        Node curr = head;
        Node prev = sentinel;
        
        int counter = 1;
        while(curr != null)
        {
            if(counter % k == 0)
            {
                prev.next = curr.next;
            }
            else
            {
                prev = curr;
            }
            
            curr = curr.next;
            counter++;
        }
        
        return head;
        
    }
}
