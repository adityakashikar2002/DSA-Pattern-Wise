// Use Slow and Fast Pointers

/* Node of a linked list
 class Node {
   int data;
    Node next;
    Node(int d)  { data = d;  next = null; }
}
*/

class Solution {
    int getMiddle(Node head) {
        // Your code here.
        Node slow = head;
        Node fast = head;
        
        while(fast != null && fast.next != null)
        {
            slow = slow.next;
            fast = fast.next.next;
            
        }

        return slow.data;
    }
}
--------------------------------------------------------------------------
--------------------------------------------------------------------------

// WHEN ASKED TO RETURN 1st NODE for EVEN NUMBER OF NODES USE THIS NOTE
while (fast.next != head && fast.next.next != head)
{
    slow = slow.next;
    fast = fast.next.next;
}
