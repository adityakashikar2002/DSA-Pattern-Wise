// Brute Force
// Time: O(nÂ²)
// Space: O(n)
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------

/**
    sabse asan tarika hoga ki har ek substring check marte hai
    ek set lee lete jisme string k characters dalte rahenge unique vale
    agar set se koi character repeat hota hai to maxLen udpate krk break kr denge
    aur new substring me dekhenge; 
*/
class Solution {
    public int lengthOfLongestSubstring(String s) {
        int n = s.length();
        
        int maxLen = 0;

        for(int i = 0; i < n; i++)
        {
            Set<Character> set = new HashSet<>();
            int currLen = 0;

            for(int j = i; j < n; j++)
            {
                char ch = s.charAt(j);
                
                if(set.contains(ch))
                {
                    break;
                }
                else
                {
                    set.add(ch);
                    currLen++;
                }
                    
            }

            maxLen = Math.max(maxLen, currLen);

        }

        return maxLen;
    }
}
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O()
// Space: O()
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
