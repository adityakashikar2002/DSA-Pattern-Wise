// Brute Approach
// Time: O(nÂ²)
// Space: O(1)
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------

/*
    sabse asan tarika hoga ki sare subarrays ka sum dekhte hai
*/
class Solution {
    public int longestSubarray(int[] arr, int k) {
        // code here
        int n = arr.length;
        
        int maxLen = 0;
        
        for(int i = 0; i < n; i++)
        {
            int sum = 0 ;
            
            for(int j = i; j < n; j++)
            {
                sum += arr[j];
                
                if(sum == k)
                {
                    maxLen = Math.max(maxLen, j - i + 1);
                }
            }
        }
        
        return maxLen;
    }
}
---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
// Optimal Solution

---------------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------------
