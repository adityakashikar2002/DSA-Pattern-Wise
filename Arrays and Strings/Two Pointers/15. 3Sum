// Brute Approach
// Time: O(n³)
// Space: O(n³)
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
/**
    seedha tarika hoga ki har triplet jo form kiya ja skhta hai pata kro
    har ans triplet ko sort krk set me daal do
    phir set me se sare triplets ko list of lists me add krk return maar do
*/
class Solution {
    public List<List<Integer>> threeSum(int[] nums) {
        int n = nums.length;

        List<List<Integer>> res = new ArrayList<>();
        Set<List<Integer>> set = new HashSet<>();

        List<Integer> sumEle;

        for(int i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                for(int k = j + 1; k < n; k++)
                {
                    int sum = nums[i] + nums[j] + nums[k];

                    if(sum == 0)
                    {
                        sumEle = new ArrayList<>();

                        sumEle.add(nums[i]);
                        sumEle.add(nums[j]);
                        sumEle.add(nums[k]);

                        Collections.sort(sumEle);

                        set.add(sumEle);
                    }
                }
            }
        }

        for(List<Integer> list: set)
        {
            res.add(list);
        }

        return res;
    }
}
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

// Optimal Approach
// Time: O()
// Space: O()
-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------
