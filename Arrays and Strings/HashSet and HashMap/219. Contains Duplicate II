class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();

        for(int i=0;i<nums.length;i++)
        {
            if(map.containsKey(nums[i]))
            {
                if((int) Math.abs(map.get(nums[i]) - i) <=k)
                {
                    return true;
                }
                else
                {
                    map.put(nums[i],i);
                }
            }

            if(!map.containsKey(nums[i]))
            {
                map.put(nums[i],i);
            }
        }

        return false;
    }
}

----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------
// Sliding Window 
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Set<Integer> set = new HashSet<>();

        int l=0;
        for(int r=0;r<nums.length;r++)
        {
            if(r-l>k)
            {
                set.remove(nums[l]);
                l++;
            }

            if(set.contains(nums[r]))
                return true;
            else
                set.add(nums[r]);
        }

        return false;
    }
}
