// Brute Force
// Time: O(nÂ²)
// Space: O(1)
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
/**
    sabse simple tarika hoga ki sare subarrays check kr lo (Brute Force)
*/
class Solution {
    public int subarraySum(int[] nums, int k) {
        int n = nums.length;
        int ans = 0;

        int sum = 0;

        for(int i = 0; i < n; i++)
        {
            sum = 0;
            
            for(int j = i; j < n; j++)
            {
                sum += nums[j];

                if(sum == k)
                    ans++;
            }
        }

        return ans;
    }
}
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

// Optimal Approach
// Time: O(n)
// Space: O(n)
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
/**
    dursa tarika hai ki socho
    ek array hai jiska pura sum = total hai

    to usme se sochte hai ki last ka ending portion ka sum 'k' hai
    to iska kya matlab hua aage hum (total - k) mila

    to seedhi baat hai

    if there exists a subarray with sum as total - k, that means the rest of the subarray has sum k 
    bss yee sum  ko store krna padega

*/
class Solution {
    public int subarraySum(int[] nums, int k) {
        int n = nums.length;
        int ans = 0;

        int sum = 0;
        HashMap<Integer, Integer> map = new HashMap<>();

        for(int i = 0; i < n; i++)
        {
            sum += nums[i];

            if(sum == k)
                ans++;
            
            if(map.containsKey(sum - k))
                ans = ans + map.get(sum - k);

            if(!map.containsKey(sum))
                map.put(sum, 1);
            else
                map.put(sum, map.get(sum) + 1);

        }  

        return ans;
    }
}
