// Brute Approach
// Time: O(nÂ²)
// Space: O(1)
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------

/**
    sabse brute approach hoga ki sare subarrays me check kro
*/
class Solution {
    public boolean checkSubarraySum(int[] nums, int k) {
        int n = nums.length;

        for(int i = 0; i < n; i++)
        {
            int sum = 0;
            for(int j = i; j < n; j++)
            {
                sum += nums[j];

                if(j - i + 1 >= 2 && sum % k == 0)
                    return true;
            }
        }

        return false;
    }
}
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O(n)
// Space: O(1)
----------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------
