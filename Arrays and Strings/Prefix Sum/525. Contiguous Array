// Brute Approach
// Time: O(nÂ²)
// Space: O(1)
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
/**
    sabse brute force tarika hoga ki sare subarrays me jake dekho count of zeroes aur ones
*/
class Solution {
    public int findMaxLength(int[] nums) {
        int n = nums.length;
        int maxLen = 0;

        for(int i = 0; i < n; i++)
        {
            int cZeroes = 0;
            int cOnes = 0;

            for(int j = i; j < n; j++)
            {
                if(nums[j] == 0)
                    cZeroes++;
                else
                    cOnes++;

                if(cZeroes == cOnes)
                    maxLen = Math.max(maxLen, j - i + 1);
            }   
        }

        return maxLen;
    }
}
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O(n)
// Space: O(n)
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
class Solution {
    public int findMaxLength(int[] nums) {
        int maxLen=0;
        HashMap<Integer,Integer> map = new HashMap<>();

        int sum=0;
        int k=0;
        for(int i=0;i<nums.length;i++)
        {
            sum+=(nums[i]>0)?1:-1;

            if(sum==0)
            {
                maxLen=Math.max(maxLen,i+1);
            }

            if(map.containsKey(sum-k))
            {
                maxLen=Math.max(maxLen,i-map.get(sum-k));
            }

            if(!map.containsKey(sum))
            {
                map.put(sum,i);
            }
        }

        return maxLen;
    }
}
