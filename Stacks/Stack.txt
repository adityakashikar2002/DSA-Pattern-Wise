// Array Implementation of Stack - Fixed Size
public class stack_array {
    int top;
    int cap;
    int[] a;
    
    public stack_array(int capacity) {
        this.cap = capacity;
        a = new int[cap];
        this.top = -1;
    }
    
    public void push(int num) {
        if(top >= cap -1) {
            throw new RuntimeException("Stack Overflow");
            // System.out.println("Stack Overflow");
        }
        a[++top] = num;
    }
    
    public int pop() {
        if(top == -1) {
            throw new RuntimeException("Stack Underflow");
         // System.out.println("Stack Underflow");
        }
        return a[top--];
    }
    
    public int peek() {
        if(top == -1) {
            throw new RuntimeException("Stack is Empty");
         // System.out.println("Stack is Empty");
        }
        return a[top];
    }
    
    public void printStack() {
        for(int i = 0; i <= top; i++) {
            System.out.print(a[i] + " ");
        }
        System.out.println();
    }
    
    public static void main(String args[]) {
        stack_array st = new stack_array(10);
        st.push(1);
        st.push(5);
        st.push(2);
        st.push(67);
        st.push(21);
        st.push(54);
        st.push(42);
        st.push(97);
        st.push(697);
        st.push(937);
        
        st.printStack();   // prints all 10 elements
        
        System.out.println("Popped: " + st.pop());
        
        st.printStack();   // prints remaining 9 elements
    }
}
