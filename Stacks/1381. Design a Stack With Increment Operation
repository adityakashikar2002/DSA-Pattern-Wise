// Brute Force
// Time: O(k)
// Space: O(MAX)
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
/**
    brute approach to yehi hoga ki jaisa bola hai vaisa kro ðŸ˜‚
    apn array implementation of stack ko follow krenge

    sare operations O(1) me honge (push & pop)
    sirf increment O(k) me hoga
*/
class CustomStack {

    int[] stack;
    int MAX;
    int top;

    public CustomStack(int maxSize) {
        MAX = maxSize;
        stack = new int[MAX];
        top = -1;
    }
    
    public void push(int x) {
        if(top == MAX - 1)
            return;
        
        stack[++top] = x;
    }
    
    public int pop() {
        if(top == -1)
            return -1;
        
        return stack[top--];
    }
    
    public void increment(int k, int val) {
        if(top != -1) // jab stack empty nhi hai
        {
            if(top >= k) // agar sufficient bottom elements hai
            {
                for(int i = 0; i < k; i++)
                {
                    stack[i] += val;
                }
            }
            else // agar k se kam elements hai to saro ko increment kro
            {
                for(int i = 0; i <= top; i++)
                {
                    stack[i] += val;
                }
            }
        }
    }
}

/**
 * Your CustomStack object will be instantiated and called as such:
 * CustomStack obj = new CustomStack(maxSize);
 * obj.push(x);
 * int param_2 = obj.pop();
 * obj.increment(k,val);
 */
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O(1)
// Space: O(MAX)
-----------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------
