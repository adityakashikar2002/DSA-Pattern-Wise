// Time: O(n)
// Space: O(n)
---------------------------------------------------------------------------------
---------------------------------------------------------------------------------

class Solution {
    public int calculate(String s) {
        int n = s.length();

        int res = 0;
        int num = 0;
        int sign = 1;

        Stack<Integer> st = new Stack<>();

        for(int i = 0; i < n; i++)
        {
            char ch = s.charAt(i);

            if(ch == ' ')
                continue;

            if(Character.isDigit(ch))
            {
                num = num * 10 + ch - '0';
            }
            else if(ch == '+')
            {
                res = res + (num * sign);
                num = 0;
                sign = 1;
            }
            else if(ch == '-')
            {
                res = res + (num * sign);
                num = 0;
                sign = -1;
            }
            else if(ch == '(')
            {
                st.push(res);
                st.push(sign);

                res = 0;
                num = 0;
                sign = 1;
            }
            else if(ch == ')')
            {
                res = res + (num * sign);

                int resSign = st.pop();
                int lastRes = st.pop();

                res = lastRes + (res * resSign);
                num = 0;
                sign = 1; 
            }


        }

        res = res + (num * sign); // imp hai nhi to last number choot jaega

        return res;
    }
}
