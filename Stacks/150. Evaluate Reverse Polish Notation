// Time: O(n)
// Space: O(n)
----------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------

/**
    sabse asan tarika hoga ki ek stack le lo bhai
    usme yee sare numbers dalo bss, jab bhi operator aya tab stack me se two elements pop kro aur 
    unka answer nikal ke stack me push kro
*/
class Solution {
    public int evalRPN(String[] tokens) {
        int n = tokens.length;

        Stack<Integer> st = new Stack<>();

        for(int i = 0; i < n; i++)
        {
            String s = tokens[i];

            switch(s)
            {
                case "+":
                {
                    int op1 = st.pop();
                    int op2 = st.pop();
                    int res = op2 + op1;
                    st.push(res);

                    break;
                }
                case "-":
                {
                    int op1 = st.pop();
                    int op2 = st.pop();
                    int res = op2 - op1;
                    st.push(res);

                    break;
                }
                case "*":
                {
                    int op1 = st.pop();
                    int op2 = st.pop();
                    int res = op2 * op1;
                    st.push(res);

                    break;
                }
                case "/":
                {
                    int op1 = st.pop();
                    int op2 = st.pop();
                    int res = op2 / op1;
                    st.push(res);

                    break;
                }
                default:
                {
                    st.push(Integer.parseInt(s));
                    break;
                }

            }
        }

        return st.pop();
    }
}
