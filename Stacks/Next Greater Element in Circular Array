// Brute Force
// Time: O(nÂ²)
// Space: O(n)
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
/*
    idea simple hai dursa loop 2 baar chalao kyuki circle me ghoomna hai so..
    aur check kro same NGE vala concept, bss % (modulus) le lo 
*/
class Solution {
    public ArrayList<Integer> nextGreater(int[] arr) {
        // code here
        int n = arr.length;
        
        ArrayList<Integer> res = new ArrayList<>(Collections.nCopies(n, -1));
        
        for(int i = 0; i < n; i++)
        {
            for(int j = i + 1; j < 2 * n; j++)
            {
                int num = j % n; // yee jarrori hai
                
                if(arr[num] > arr[i])
                {
                    res.set(i, arr[num]);
                    break;
                }
            }
        }
        
        return res;
    }
}

----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
// Optimal Approach
// Time: O(n)
// Space: O(n)
----------------------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------------------
/*
    bss 2 baar traverse maro arr ko aur vohi NGE vala concept  
*/
class Solution {
    public ArrayList<Integer> nextGreater(int[] arr) {
        // code here
        int n = arr.length;
        
        ArrayList<Integer> res = new ArrayList<>(Collections.nCopies(n, -1));
        Stack<Integer> st = new Stack<>();
        
        for(int i = 0; i < 2 * n; i++)
        {
            int num = i % n;
            
            while(!st.isEmpty() && arr[st.peek()] < arr[num])
            {
                int top = st.pop();
                
                res.set(top, arr[num]);
            }
            
            if(i < n)
                st.push(num);
            
        }
        
        return res;
    }
}
